basePath: /api/v1
definitions:
  dto.AuthResponse:
    properties:
      user:
        $ref: '#/definitions/dto.UserDTO'
    type: object
  dto.ErrorResponse:
    properties:
      code:
        type: integer
      details:
        items:
          type: string
        type: array
      message:
        type: string
    type: object
  dto.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  dto.LogoutRequest:
    properties:
      all:
        description: Выйти из всех сессий
        type: boolean
    type: object
  dto.RegisterRequest:
    properties:
      email:
        type: string
      full_name:
        type: string
      password:
        minLength: 8
        type: string
    required:
    - email
    - full_name
    - password
    type: object
  dto.UserDTO:
    properties:
      created_at:
        type: string
      email:
        type: string
      full_name:
        type: string
      id:
        type: integer
    type: object
host: localhost:8080
info:
  contact: {}
  description: Сервис авторизации для платформы VOY
  title: VOY API - Auth Service
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Authenticate a user and return token
      parameters:
      - description: User login data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successful login
          schema:
            $ref: '#/definitions/dto.AuthResponse'
        "400":
          description: Invalid input
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "401":
          description: Invalid credentials
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: Login user
      tags:
      - auth
  /auth/logout:
    post:
      consumes:
      - application/json
      description: Logout user and invalidate token
      parameters:
      - description: Logout options
        in: body
        name: request
        schema:
          $ref: '#/definitions/dto.LogoutRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Logged out successfully
          schema:
            type: string
        "401":
          description: Not authenticated
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Logout user
      tags:
      - auth
  /auth/me:
    get:
      consumes:
      - application/json
      description: Get current user profile
      produces:
      - application/json
      responses:
        "200":
          description: User profile
          schema:
            $ref: '#/definitions/dto.UserDTO'
        "401":
          description: Not authenticated
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get user profile
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Register a new user with email and password
      parameters:
      - description: User registration data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: User created
          schema:
            $ref: '#/definitions/dto.AuthResponse'
        "400":
          description: Invalid input
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "409":
          description: User already exists
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: Register a new user
      tags:
      - auth
securityDefinitions:
  BearerAuth:
    description: Введите токен в формате "Bearer {token}"
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
